@page "{id:Guid}"
@using DevBlog.Web.DTO
@using Microsoft.AspNetCore.Mvc.ModelBinding
@model DevBlog.Web.Pages.BlogpostModel
@{
    ViewData["Title"] = Model.Blogpost.Title;
}


<div class="row">
    <div class="col-md-8 offset-md-2">
        <div class="card">
            <div class="card-body">
                <div class="d-flex justify-content-end">
                    @if (((AccountDTO)HttpContext.Items["User"]).Id == Model.Blogpost.Account.Id)
                    {
                        <button class="btn btn-primary me-2" data-bs-toggle="modal" data-bs-target="#editModal"><i class="fa-solid fa-pen fa-fw"></i></button>
                        <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal"><i class="fa-solid fa-trash fa-fw"></i></button>
                    }
                </div>
                <div class="row mb-3">
                    <div class="col-md-8 col-sm">
                        <h1 class="card-title">@Model.Blogpost.Title</h1>
                    </div>
                    <div class="col-md-4 col-sm d-flex flex-column">
                        <h2>@Model.Blogpost.Account.FullName</h2>
                        <h5 class="card-subtitle text-muted">@Model.Blogpost.TimeRegistration.CreatedAt @((Model.Blogpost.TimeRegistration.UpdatedAt - Model.Blogpost.TimeRegistration.CreatedAt).TotalSeconds > 5 ? $"({Model.Blogpost.TimeRegistration.UpdatedAt})" : "")</h5>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-12">
                        <span class="badge rounded-pill text-bg-primary me-3">@Model.Blogpost.Category.Name</span>
                        @foreach (var tag in Model.Blogpost.Tags)
                        {
                            <span class="badge rounded-pill text-bg-secondary">@tag.Name</span>
                        }
                    </div>
                </div>
                <div class="mb-3">
                    <p>@Model.Blogpost.Content</p>
                </div>
                <div>
                    @foreach (var image in Model.Blogpost.Images)
                    {
                        <img class="img-fluid img-thumbnail mb-3" src="~/img/@image.Name" style="aspect-ratio: 5/2; height: 400px" />
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5">Edit Blogpost</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form method="post" enctype="multipart/form-data" asp-page-handler="Edit" asp-route-id="@Model.Blogpost.Id">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="title">Title</label>
                                <input class="form-control @(ModelState.GetFieldValidationState("EditBlogpost.Title") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("EditBlogpost.Title") == ModelValidationState.Valid ? "is-valid" : "" )" placeholder="Title" asp-for="EditBlogpost.Title" value="@Model.Blogpost.Title" />
                                <span asp-validation-for="EditBlogpost.Title" class="invalid-feedback"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="category">Category</label>
                                <select class="form-control @(ModelState.GetFieldValidationState("EditBlogpost.CategoryId") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("EditBlogpost.CategoryId") == ModelValidationState.Valid ? "is-valid" : "" )" asp-items="Model.Categories" asp-for="EditBlogpost.CategoryId"></select>
                                <span asp-validation-for="EditBlogpost.CategoryId" class="invalid-feedback"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="images">Images</label>
                                <input class="form-control @(ModelState.GetFieldValidationState("EditBlogpost.Images") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("EditBlogpost.Images") == ModelValidationState.Valid ? "is-valid" : "" )" type="file" asp-for="EditBlogpost.Images" accept=".png,.jpg,.jpeg,.gif" multiple />
                                <span asp-validation-for="EditBlogpost.Images" class="invalid-feedback"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="tags">Tags</label>
                                <select class="form-control @(ModelState.GetFieldValidationState("EditBlogpost.TagIds") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("EditBlogpost.TagIds") == ModelValidationState.Valid ? "is-valid" : "" )" asp-items="Model.Tags" asp-for="EditBlogpost.TagIds" multiple></select>
                                <span asp-validation-for="EditBlogpost.TagIds" class="invalid-feedback"></span>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="content">Content</label>
                                <textarea class="form-control @(ModelState.GetFieldValidationState("EditBlogpost.Content") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("EditBlogpost.Content") == ModelValidationState.Valid ? "is-valid" : "" )" rows="3" placeholder="Type here..." name="EditBlogpost.Content" id="EditBlogpost_Content" style="resize:none">@(Model.Blogpost.Content)</textarea>
                                <span asp-validation-for="EditBlogpost.Content" class="invalid-feedback"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5">Delete Blogpost</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this post? This can not be undone.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form method="post" asp-page-handler="Delete" asp-route-id="@Model.Blogpost.Id">
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>