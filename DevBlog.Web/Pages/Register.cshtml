@page
@using Microsoft.AspNetCore.Mvc.ModelBinding
@model DevBlog.Web.Pages.RegisterModel
@{
    ViewData["Title"] = "Register";
}

<div class="row">
    <div class="col-md-4 offset-md-4">
        <div class="card">
            <div class="card-body">
                <form method="post">
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control @(ModelState.GetFieldValidationState("Register.FirstName") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("Register.FirstName") == ModelValidationState.Valid ? "is-valid" : "" )" placeholder="First Name" asp-for="Register.FirstName" />
                        <label for="firstname">First Name</label>
                        <span asp-validation-for="Register.FirstName" class="invalid-feedback"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control  @(ModelState.GetFieldValidationState("Register.LastName") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("Register.LastName") == ModelValidationState.Valid ? "is-valid" : "" )" placeholder="Last Name" asp-for="Register.LastName" />
                        <label for="lastname">Last Name</label>
                        <span asp-validation-for="Register.LastName" class="invalid-feedback"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input type="email" class="form-control @(ModelState.GetFieldValidationState("Register.Email") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("Register.Email") == ModelValidationState.Valid ? "is-valid" : "" )" placeholder="Email" asp-for="Register.Email" />
                        <label for="email">Email</label>
                        <span asp-validation-for="Register.Email" class="invalid-feedback"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input type="password" class="form-control @(ModelState.GetFieldValidationState("Register.Password") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("Register.Password") == ModelValidationState.Valid ? "is-valid" : "" )" placeholder="Password" asp-for="Register.Password" />
                        <label for="password">Password</label>
                        <span asp-validation-for="Register.Password" class="invalid-feedback"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input type="password" class="form-control @(ModelState.GetFieldValidationState("Register.ConfirmPassword") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("Register.ConfirmPassword") == ModelValidationState.Valid ? "is-valid" : "" )" placeholder="Confirm Password" asp-for="Register.ConfirmPassword" />
                        <label for="confirm_password">Confirm Password</label>
                        <span asp-validation-for="Register.ConfirmPassword" class="invalid-feedback"></span>
                    </div>
                    <div class="mb-3">
                        <button class="btn btn-primary btn-lg w-100" type="submit">Register</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
